[["index.html", "Metodología bayesiana de estimación desagregada para cualquier IPM Capítulo 1 Introducción", " Metodología bayesiana de estimación desagregada para cualquier IPM Andrés Gutiérrez1, Stalyn Guerrero2 2023-10-02 Capítulo 1 Introducción El Índice de Pobreza Multidimensional (IPM) es una medida de la pobreza que toma en cuenta múltiples dimensiones de la vida humana, como la salud, la educación, el acceso a los servicios básicos y las condiciones de vida. Fue desarrollado por Sabina Alkire y James Foster en 2007, y se ha utilizado para medir la pobreza en más de 100 países. El IPM es importante porque ofrece una visión más completa de la pobreza que las medidas tradicionales de la pobreza, que se basan en el ingreso o el consumo. El IPM permite identificar a las personas que son pobres en múltiples dimensiones, y proporciona información sobre las dimensiones de la pobreza que más impactan en la vida de las personas. El IPM tiene algunas limitaciones. Una limitación es que es difícil de calcular, ya que requiere datos sobre múltiples dimensiones de la pobreza. Otra limitación es que el IPM puede ser subjetivo, ya que depende de las dimensiones que se incluyen en el índice y de los pesos que se asignan a cada dimensión. En los últimos años, se han desarrollado metodologías más recientes para el cálculo del IPM. Estas metodologías tienen en cuenta algunas de las limitaciones del IPM tradicional, y ofrecen una visión más precisa de la pobreza multidimensional. Una de las metodologías más recientes es el IPM de Alkire-Foster-Sen (Alkire, Foster y Sen, 2010). Este índice es similar al IPM tradicional, pero tiene en cuenta la desigualdad entre las personas que son pobres. El IPM de Alkire-Foster-Sen también permite identificar a las personas que son pobres en una dimensión, pero no en otras. El IPM es una herramienta importante para medir la pobreza multidimensional. Ofrece una visión más completa de la pobreza que las medidas tradicionales de la pobreza, y proporciona información sobre las dimensiones de la pobreza que más impactan en la vida de las personas. En los últimos años, se han desarrollado metodologías más recientes para el cálculo del IPM, que ofrecen una visión más precisa de la pobreza multidimensional. Experto Regional en Estadísticas Sociales - Comisión Económica para América Latina y el Caribe (CEPAL) - andres.gutierrez@cepal.org↩︎ Consultor - Comisión Económica para América Latina y el Caribe (CEPAL), guerrerostalyn@gmail.com↩︎ "],["índice-de-pobreza-multidimensional.html", "Capítulo 2 Índice de Pobreza Multidimensional", " Capítulo 2 Índice de Pobreza Multidimensional El Índice de Pobreza Multidimensional (IPM) es una medida que captura la pobreza desde múltiples dimensiones. Se calcula utilizando ponderaciones y umbrales en función de diferentes variables o indicadores que reflejan aspectos diversos de la calidad de vida. Ahora el IPM es un caso particular de la metodología de la tasa de pobreza ajustada FGT (Foster, Greer y Thorbecke, 1984) de medidas de pobreza unidimensionales. Al igual que cada medida FGT se puede ver como la media de un vector apropiado construido a partir de los datos originales y censurado usando la línea de pobreza, la tasa de pobreza ajustada es la media del vector de puntuación de privación censurado. \\[ IPM = \\frac{1}{N}\\sum_{i=1}^{N}c_i(z) \\] donde, \\(N\\) es el número de individuos u hogares en la población y \\(c_i(z)\\) es el puntaje de privación censurado de la observación \\(i\\) que esta dado como: \\[ c_{i}\\left(z\\right)=\\begin{cases} q_i &amp; \\text{si } q_i\\ge z\\\\ 0 &amp; \\text{si } q &lt; z \\end{cases} \\] con \\[ q_i = \\sum_{k=1}^{K} w_k \\cdot y_{i}^{k} \\] Donde: \\(K\\) es el número de dimensiones o indicadores de la privación. \\(w_k\\) es el ponderador asociado a la dimensión \\(k\\). \\(y_{i}^{k}\\) es una variable binaria que toma el valor \\(1\\) si el individuo \\(i\\) esta privado en la dimensión \\(k\\) y \\(0\\) en el caso contrario. \\(z\\) es el umbral para considerar a alguien con multiples privaciones. Una segunda forma de ver es en términos de índices parciales, es decir, medidas que proporcionan información básica sobre un solo aspecto de la pobreza. A continuación vemos cada uno de estos componentes: Headcount Ratio (H) Este componente mide la proporción de personas que están privadas en al menos una de las dimensiones consideradas. Matemáticamente, \\(H\\) se calcula como la proporción entre el número de personas privadas y la población total: \\[ H = \\frac{1}{N} \\sum_{i=1}^{N} I\\left( q_{i} \\ge z \\right)= \\frac{N\\left(z\\right)}{N} \\] donde \\(N\\left(z\\right) = \\sum_{i=1}^{N} I\\left( q_{i} \\ge z \\right)\\) Intensity of Deprivation (A) Este componente mide la intensidad o gravedad promedio de la privación entre aquellos que están privados. Matemáticamente, \\(A\\) se calcula como el promedio de los indicadoras \\(y_{i}^{k}\\) para aquellos hogares o personas que están privados: \\[ A=\\sum_{i=1}^{N}\\frac{c_{i}\\left(z\\right)}{N\\left(z\\right)} \\] Luego, el Índice de Pobreza Multidimensional (IPM) se expresa como: \\[ IPM = H \\times A \\] reemplazando las \\(H\\) y \\(A\\) por sus respectivas ecuaciones se tiene que: \\[ IPM=\\frac{N\\left(z\\right)}{N}\\times\\sum_{i=1}^{N}\\frac{c_{i}\\left(z\\right)}{N\\left(z\\right)}=\\frac{1}{N}\\sum_{i=1}^{N}c_{i}\\left(z\\right) \\] "],["ejemplo.html", "2.1 Ejemplo", " 2.1 Ejemplo Para ilustrar el cálculo del Índice de Pobreza Multidimensional (IPM), empleamos el conjunto de datos simulados a continuación. Consideremos un escenario con diez observaciones (\\(N = 10\\)), a las cuales se les han asignado nueve dimensiones distintas (\\(K = 9\\)). Estas dimensiones están ponderadas de acuerdo con el vector \\(w = (0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2)\\). # Definición de parámetros K &lt;- 9 # Número de dimensiones N &lt;- 10 # Número de personas w &lt;- c(0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2) # Ponderaciones para cada dimensión A continuación se realiza la simulación de la matriz de variables dicótomicas para las diez persona respondientes set.seed(1234) # Generación de datos simulados M_dummy &lt;- matrix(sample(x = c(1,0),size = N * K, replace = TRUE), nrow = N, ncol = K) # Matriz de dimensiones aleatorias colnames(M_dummy)&lt;- paste0(&quot;y&quot;,1:K) rownames(M_dummy)&lt;- paste0(&quot;P&quot;,1:N) y1 y2 y3 y4 y5 y6 y7 y8 y9 P1 0 0 0 1 0 0 0 0 1 P2 0 0 0 0 1 0 0 1 0 P3 0 0 0 1 0 0 1 1 1 P4 0 1 0 1 0 0 0 1 0 P5 1 0 0 1 0 1 1 0 1 P6 0 0 0 0 1 0 1 0 0 P7 1 0 1 1 1 1 0 0 1 P8 1 1 0 0 1 1 1 1 0 P9 1 0 0 0 1 0 1 0 0 P10 0 0 0 1 0 1 0 1 1 A continuación se realiza el calculo de H y A usando las ecuaciones dadas previamente. q &lt;- M_dummy %*% w # Vector q de ponderaciones por dimensiones Indicadora &lt;- ifelse(q &gt;= 0.4,1,0) c_i &lt;- ifelse(Indicadora == 1, q,0) datos &lt;- data.frame(M_dummy, q_i = q, Ind_i = Indicadora, c_i) y1 y2 y3 y4 y5 y6 y7 y8 y9 q_i Ind_i c_i P1 0 0 0 1 0 0 0 0 1 0.3 0 0.0 P2 0 0 0 0 1 0 0 1 0 0.2 0 0.0 P3 0 0 0 1 0 0 1 1 1 0.5 1 0.5 P4 0 1 0 1 0 0 0 1 0 0.3 0 0.0 P5 1 0 0 1 0 1 1 0 1 0.6 1 0.6 P6 0 0 0 0 1 0 1 0 0 0.2 0 0.0 P7 1 0 1 1 1 1 0 0 1 0.7 1 0.7 P8 1 1 0 0 1 1 1 1 0 0.6 1 0.6 P9 1 0 0 0 1 0 1 0 0 0.3 0 0.0 P10 0 0 0 1 0 1 0 1 1 0.5 1 0.5 Para obtener el \\(IPM\\) procedemos así IPM = mean(datos$c_i) Los componentes \\(H\\) y \\(A\\) los se obtienen así: Nz = sum(datos$Ind_i) H = Nz/N A = sum(datos$c_i)/Nz data.frame(A,H,HA = H*A, IPM) %&gt;% tba() A H HA IPM 0.58 0.5 0.29 0.29 "],["estimación-del-modelo-de-unidad-para-variables-binarias.html", "Capítulo 3 Estimación del modelo de unidad para variables Binarias", " Capítulo 3 Estimación del modelo de unidad para variables Binarias En muchas aplicaciones, la variable de interés en áreas pequeñas puede ser binaria, por ejemplo, \\(y_{di} = 0\\) ó \\(1\\), representando la ausencia (o no) de una característica específica. En el caso binario, la estimación objetivo en cada dominio \\(d = 1, \\dotso, D\\) puede ser la proporción \\(\\bar{Y}_d = \\pi_d = \\frac{1}{N_d} \\sum_{i=1}^{N_d} y_{di}\\) de la población que tiene esta característica, donde \\(N=\\sum_{d=1}^{D}N_d\\) y \\(\\pi_{di}\\) es la probabilidad de que una unidad específica \\(i\\) en el dominio \\(d\\) obtenga el valor 1. Aunque se han propuesto otros métodos para resultados binarios, como el modelado basado en M-cuantiles (Chambers et al., 2016), en esta aplicación seguimos el enfoque tradicional basado en modelos mixtos lineales generalizados. En este escenario, \\(\\pi_{di}\\) se modela con una función de enlace logit definida como: \\[ \\text{logit}(\\pi_{di}) = \\log \\left( \\frac{\\pi_{di}}{1 - \\pi_{di}} \\right) = \\eta_{di} = \\mathbf{x}_{di}^\\top \\mathbf{\\beta} + u_d \\] con \\(i = 1, \\ldots, N_d\\), \\(d = 1, \\ldots, D\\), \\(\\boldsymbol{\\beta}\\) un vector de parámetros de efectos fijos y \\(u_d\\) el efecto aleatorio específico del área para el dominio \\(d\\) con \\(u_d \\sim N(0, \\sigma_u^2)\\). Se asume que \\(u_d\\) son independientes y \\(y_{di} | u_d \\sim \\text{Bernoulli}(\\pi_{di})\\) con \\(E(y_{di} | u_d) = \\pi_{di}\\) y \\(\\text{Var}(y_{di} | u_d) = \\sigma^2_{di} = \\pi_{di} (1 - \\pi_{di})\\). Además, \\(\\mathbf{x}_{di}\\) representa el vector \\(p \\times 1\\) de valores de las variables auxiliares a nivel de unidad. Dado que nuestro problema involucra la identificación de privaciones en forma de valores binarios \\((0,1)\\) en relación con varios indicadores, hemos optado por utilizar un modelo mixto logit Bernoulli a nivel de unidad como punto de partida. Hay varios algoritmos para ajustar este tipo de modelo, incluyendo el método de momentos simulados (MSM), el algoritmo de expectación-maximización (EM), el algoritmo de verosimilitud cuasi-penalizada (PQL) y el algoritmo de aproximación de máxima verosimilitud Laplace (ML-Laplace). Los métodos bayesianos también se pueden utilizar para ajustar modelos mixtos logit Bernoulli. Uno de los métodos más comunes es el algoritmo de Markov Chain Monte Carlo (MCMC). Este algoritmo genera muestras de los parámetros del modelo a partir de su distribución posterior, que es la distribución de los parámetros dada la evidencia. Otro método bayesiano para ajustar modelos mixtos logit Bernoulli es el enfoque de máxima verosimilitud aproximada (MAP). Este enfoque se basa en la idea de encontrar los parámetros del modelo que maximizan la verosimilitud de los datos, suponiendo que los parámetros siguen una distribución a priori. Los métodos bayesianos tienen varias ventajas sobre los métodos clásicos para ajustar modelos mixtos logit Bernoulli. En primer lugar, los métodos bayesianos pueden incorporar información previa sobre los parámetros del modelo, lo que puede mejorar la precisión de las estimaciones. En segundo lugar, los métodos bayesianos pueden proporcionar intervalos de credivilidad para los parámetros del modelo, que pueden ser utilizados para hacer inferencias sobre el modelo. En tercer lugar, los métodos bayesianos pueden ser utilizados para generar predicciones del modelo, que pueden ser utilizadas para tomar decisiones. Sin embargo, los métodos bayesianos también tienen algunas desventajas. Por ejemplo, los métodos bayesianos pueden ser más sensibles a la elección de la distribución a previas, lo que puede dificultar la obtención de estimaciones precisas. Para evitar, eso en nuestro ejercicio se hará uso de distribuciones previas no informativas, es decir, podemos definir distribuciones previas \\[ \\begin{eqnarray*} \\beta_m &amp; \\sim &amp; N(0, 10000)\\\\ \\sigma^2_u &amp;\\sim &amp; IG(0.0001,0.0001) \\end{eqnarray*} \\] El modelo se debe estimar para cada una de las dimensiones. "],["estimación-de-pik_di.html", "3.1 Estimación de \\(\\pi^{k}_{di}\\)", " 3.1 Estimación de \\(\\pi^{k}_{di}\\) La estimación de \\(\\pi^{k}_{di}\\) refleja la probabilidad de que una unidad específica \\(i\\) en el dominio \\(d\\) obtenga el valor 1 en la dimensión \\(k\\). Para llevar a cabo esta estimación, seguimos el siguiente procedimiento: \\[ \\bar{Y}^{k}_d = \\pi^{k}_d = \\frac{1}{N_d} \\sum_{i=1}^{N_d} y^{k}_{di} \\] Aquí, \\(y^{k}_{di}\\) puede tomar los valores 0 ó 1, representando la ausencia (o no) de una característica específica. Ahora, podemos dividir la suma en dos partes: \\(s_d\\), que representa las unidades observadas en una muestra, y \\(s_d^c\\), que son las unidades no observados. Por lo tanto, \\[ \\begin{equation*} \\bar{Y}^{k}_d = \\pi^{k}_d = \\frac{1}{N_d}\\left(\\sum_{s_d}y^{k}_{di} + \\sum_{s^c_d}y^{k}_{di} \\right) \\end{equation*} \\] Ahora, suponga que mediante un modelo de unidad es posible realizar la predicción de \\(y^{k}_{di}\\) para las unidades no observadas. De esta manera, el estimador de \\(\\pi^{k}_d\\) se expresa como: \\[ \\hat{\\pi}^{k}_d = \\frac{1}{N_d}\\left( \\sum_{s_d}y^{k}_{di} + \\sum_{s^c_d}\\hat{y}^{k}_{di} \\right) \\] Donde, \\[\\hat{y}^{k}_{di}=E_{\\mathscr{M}}\\left(y^{k}_{di}\\mid\\boldsymbol{x}_{d},\\boldsymbol{\\beta}\\right)\\] Aquí, \\(\\mathscr{M}\\) hace referencia a la medida de probabilidad inducida por el modelo. Sin embargo, en la práctica, individualizar a las unidades observadas y no observadas en una encuesta de hogares puede ser difícil. Por lo tanto, una alternativa es realizar la predicción \\(\\hat{y}^{k}_{di}\\) para todas las observaciones en el universo. De esta manera, la estimación \\(\\hat{\\pi}^{k}_d\\) se simplifica a: \\[ \\hat{\\pi}^{k}_d = \\frac{1}{N_d}\\sum_{i=1}^{N_d}\\hat{y}^{k}_{di} \\] Este enfoque permite estimar la probabilidad \\(\\pi^{k}_d\\) en el dominio \\(d\\) en la dimensión \\(k\\) utilizando predicciones y datos disponibles en lugar de contar con información individual detallada para todos los casos. "],["pedicción-de-los-hard-estimates.html", "3.2 Pedicción de los Hard estimates", " 3.2 Pedicción de los Hard estimates Hobza y Morales (2016) definen los “hard estimates” como valores binarios (0 o 1) que indican de manera precisa si un individuo tiene o no una característica específica en relación con cada indicador de pobreza multidimensional. Estas estimaciones reflejan la naturaleza binaria de la información, facilitando el cálculo de indicadores y tasas de incidencia de pobreza. Estas estimaciones desempeñan un papel clave en la determinación de la incidencia de la pobreza multidimensional, ya que indican la presencia o ausencia de privaciones en indicadores específicos para cada individuo. Esto plantea un desafío en la estimación, ya que no se trata solo de obtener valores finales, sino de precisar si las características están presentes o no en indicadores faltantes. Con la definición de los hard estimates, y sabiendo que la estimación de \\(\\pi^{k}_{di}\\) refleja la probabilidad de que una unidad específica \\(i\\) en el dominio \\(d\\) obtenga el valor 1 en la dimensión \\(k\\) se define \\(\\hat{y}^{k}_{di} \\sim Bernoulli(\\hat{\\pi}^{k}_{di})\\) "],["estimación-puntual-del-índice-de-pobreza-multidimensional-ipm.html", "3.3 Estimación Puntual del Índice de Pobreza Multidimensional (IPM)", " 3.3 Estimación Puntual del Índice de Pobreza Multidimensional (IPM) Supongamos que el Índice de Pobreza Multidimensional está compuesto por \\(K\\) dimensiones o indicadores para cada individuo \\(i\\) en el censo. El procedimiento propuesto para estimar el IPM es el siguiente: Utilice los datos de la muestra para ajustar un modelo logit Bernoulli a nivel de unidad para cada indicador. Esto se logra mediante el uso del algoritmo de Markov Chain Monte Carlo (MCMC) con \\(L\\) iteraciones. Para cada dimensión \\(k\\) a la cual se le para ajustó un modelo logit Bernoulli a nivel de unidad con \\(L\\) iteraciones, realice la predicción de los valores \\(\\hat{y}^{k}_{di}\\) para cada individuo en el censo. Esto generará \\(L\\) realizaciones aleatorias de \\(\\hat{y}^{k}_{di}\\). Denotemos como \\(\\hat{y}_{di}^{kl}\\) a la \\(l\\)-ésima realización aleatoria de la dimensión \\(k\\) para el individuo \\(i\\) en el dominio \\(d\\). Calculamos \\(q_{di}^{l} = \\sum_{k=1}^{K} w_k \\cdot y_{di}^{kl}\\). Luego, podemos calcular \\(H_d^{l}\\), \\(A_d^{l}\\) y \\(IPM_{d}^{l}\\) utilizando las ecuaciones: \\[ IPM_{d}^{l} = \\frac{1}{N_d}\\sum_{i=1}^{N_{d}}c_{di}^{l}\\left(z\\right) \\] \\[ H_d^{l}=\\frac{1}{N_{d}}\\sum_{i=1}^{N_{d}}I\\left(q_{di}^{l}\\ge z\\right)=\\frac{N_{d}^{l}\\left(z\\right)}{N_{d}} \\] y \\[ A_{d}^{l}=\\sum_{i=1}^{N_{d}}\\frac{c_{di}^{l}\\left(z\\right)}{N^{l}_{d}\\left(z\\right)} \\] La estimación puntual de \\(H_d\\), \\(A_{d}\\) y \\(IPM_{d}\\) en cada área pequeña \\(d\\) se calcula tomando el promedio sobre cada una de las \\(L\\) iteraciones: \\[ \\hat{H}_d = \\frac{1}{L}\\sum_{l=1}^{L}H_d^l, \\] \\[ \\hat{A}_d = \\frac{1}{L}\\sum_{l=1}^{L}A_d^l \\] y \\[ \\widehat{IPM}_d = \\frac{1}{L}\\sum_{l=1}^{L}IPM_d^l \\] Dada que el modelo se estimó usando el algoritmo MCMC, es posible tener la estimación del error de estimación, de esta forma: \\[ \\widehat{Var}(\\hat{H}_d) = \\frac{1}{L}\\sum_{l=1}^{L}\\left( H^{l}_{d} -\\hat{H}_d \\right)^2, \\] \\[ \\widehat{Var}(\\hat{A}_d) = \\frac{1}{L}\\sum_{l=1}^{L}\\left( A^{l}_{d} -\\hat{A}_d \\right)^2 \\] y \\[ \\widehat{Var}(\\widehat{IPM}_d) = \\frac{1}{L}\\sum_{l=1}^{L}\\left( IPM_d^{l} -\\widehat{IPM}_d \\right)^2 \\] "],["ejemplo-aplicación-de-la-metodología..html", "3.4 Ejemplo: Aplicación de la metodología.", " 3.4 Ejemplo: Aplicación de la metodología. Para ilustrar el cálculo del Índice de Pobreza Multidimensional (IPM), empleando el algoritmo MCMC empleamos el conjunto de datos simulados a continuación. Consideremos un escenario con diez unidades (\\(N = 10\\)), a las cuales se les han asignado nueve dimensiones distintas (\\(K = 9\\)). Estas dimensiones están ponderadas de acuerdo con el vector \\(w = (0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2)\\). # Definición de parámetros K &lt;- 9 # Número de dimensiones N &lt;- 10 # Número de personas w &lt;- c(0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2) # Ponderaciones para cada dimensión A continuación se realiza la simulación de la matriz de variables dicótomicas para las diez unidades, para ello asumiremos que \\(\\hat{\\pi}^{k}_{di} = (0.5, 0.2, 0.3, 0.4, 0.1, 0.9, 0.2, 0.7, 0.1)\\) que fueron estimados mediante modelos mixtos logit Bernoulli, Bayesiano con \\(L = 5\\). Con las que se obtienes las siguientes matrices de Hard estimates set.seed(1234) library(purrr) pi_di = c(0.5, 0.2, 0.3, 0.4, 0.1, 0.9, 0.2, 0.7,0.1) # Generación de datos simulados ## Iteración 1 data_1 &lt;- data.frame( y1 = as.numeric(rbernoulli(n = N, p= pi_di[1])), y2 = as.numeric(rbernoulli(n = N, p= pi_di[2])), y3 = as.numeric(rbernoulli(n = N, p= pi_di[3])), y4 = as.numeric(rbernoulli(n = N, p= pi_di[4])), y5 = as.numeric(rbernoulli(n = N, p= pi_di[5])), y6 = as.numeric(rbernoulli(n = N, p= pi_di[6])), y7 = as.numeric(rbernoulli(n = N, p= pi_di[7])), y8 = as.numeric(rbernoulli(n = N, p= pi_di[8])), y9 = as.numeric(rbernoulli(n = N, p= pi_di[9])) ) rownames(data_1)&lt;- paste0(&quot;P&quot;,1:N) Tabla 3.1: Iteración (l=1) y1 y2 y3 y4 y5 y6 y7 y8 y9 P1 0 0 0 0 0 0 1 0 1 P2 1 0 0 0 0 1 0 1 0 P3 1 0 0 0 0 1 0 0 0 P4 1 1 0 0 0 1 0 1 0 P5 1 0 0 0 0 1 0 0 0 P6 1 1 1 1 0 1 0 1 0 P7 0 0 0 0 0 1 0 1 0 P8 0 0 1 0 0 1 0 0 0 P9 1 0 1 1 0 1 0 1 0 P10 1 0 0 1 0 1 0 1 0 Tabla 3.2: Iteración (l=2) y1 y2 y3 y4 y5 y6 y7 y8 y9 P1 0 0 1 1 1 1 0 1 0 P2 1 0 0 1 0 1 0 1 0 P3 0 0 1 1 0 1 0 1 0 P4 0 0 0 1 0 1 1 0 0 P5 0 0 0 0 1 1 0 0 0 P6 1 0 1 0 0 1 1 1 0 P7 0 0 1 0 1 1 0 1 0 P8 0 0 0 0 0 1 1 0 0 P9 0 0 0 0 0 1 0 1 0 P10 1 0 1 0 0 1 0 1 0 Tabla 3.3: Iteración (l=3) y1 y2 y3 y4 y5 y6 y7 y8 y9 P1 0 0 0 0 0 1 0 1 0 P2 0 1 0 0 0 1 0 1 0 P3 1 0 0 0 0 1 0 0 0 P4 0 1 1 1 0 1 0 0 0 P5 1 1 0 0 0 1 1 0 0 P6 0 1 1 1 0 1 0 1 0 P7 1 1 0 1 0 1 0 0 0 P8 1 0 0 1 0 1 0 0 0 P9 0 1 0 0 0 1 1 1 0 P10 1 0 1 1 0 1 0 1 0 Tabla 3.4: Iteración (l=4) y1 y2 y3 y4 y5 y6 y7 y8 y9 P1 0 0 0 0 1 1 0 1 0 P2 1 0 0 1 0 1 1 0 0 P3 0 1 1 0 0 1 1 1 0 P4 1 0 0 0 0 1 0 1 0 P5 0 0 0 1 0 1 0 1 1 P6 1 0 1 0 0 1 0 1 1 P7 1 0 0 0 0 1 0 0 0 P8 1 0 0 1 0 1 0 1 0 P9 0 0 0 0 0 1 1 1 0 P10 0 1 0 1 0 1 0 0 0 Tabla 3.5: Iteración (l=5) y1 y2 y3 y4 y5 y6 y7 y8 y9 P1 0 1 0 1 0 1 0 1 0 P2 1 0 0 1 0 1 1 1 0 P3 0 1 0 1 0 1 0 1 0 P4 0 0 0 1 0 1 0 1 0 P5 1 0 0 0 0 1 1 0 1 P6 1 0 0 1 0 1 0 1 0 P7 1 0 0 0 0 1 0 1 0 P8 0 0 0 0 0 1 0 1 0 P9 1 0 1 0 0 1 0 1 0 P10 1 0 1 0 0 1 0 1 0 A continuación se realiza el calculo de \\(q^l_i\\), \\(I\\left( q_{i}^{l} &gt; z \\right)\\) y \\(c_{i}^{l}\\left(z\\right)\\) usando las ecuaciones dadas previamente y \\(z=0.4\\). # Vector q de ponderaciones por dimensiones q1 &lt;- as.matrix(data_1) %*% w q2 &lt;- as.matrix(data_2) %*% w q3 &lt;- as.matrix(data_3) %*% w q4 &lt;- as.matrix(data_4) %*% w q5 &lt;- as.matrix(data_5) %*% w Ind1 &lt;- ifelse(q1 &gt;= 0.4,1,0) Ind2 &lt;- ifelse(q2 &gt;= 0.4,1,0) Ind3 &lt;- ifelse(q3 &gt;= 0.4,1,0) Ind4 &lt;- ifelse(q4 &gt;= 0.4,1,0) Ind5 &lt;- ifelse(q5 &gt;= 0.4,1,0) c1 &lt;- ifelse(Ind1 == 1,q1,0) c2 &lt;- ifelse(Ind2 == 1,q2,0) c3 &lt;- ifelse(Ind3 == 1,q3,0) c4 &lt;- ifelse(Ind4 == 1,q4,0) c5 &lt;- ifelse(Ind5 == 1,q5,0) datos &lt;- data.frame(q1, q2, q3, q4, q5, Ind1, Ind2, Ind3, Ind4, Ind5, c1, c2, c3, c4, c5) q1 q2 q3 q4 q5 Ind1 Ind2 Ind3 Ind4 Ind5 c1 c2 c3 c4 c5 P1 0.3 0.5 0.2 0.3 0.4 0 1 0 0 1 0.0 0.5 0.0 0.0 0.4 P2 0.3 0.4 0.3 0.4 0.5 0 1 0 1 1 0.0 0.4 0.0 0.4 0.5 P3 0.2 0.4 0.2 0.5 0.4 0 1 0 1 1 0.0 0.4 0.0 0.5 0.4 P4 0.4 0.3 0.4 0.3 0.3 1 0 1 0 0 0.4 0.0 0.4 0.0 0.0 P5 0.2 0.2 0.4 0.5 0.5 0 0 1 1 1 0.0 0.0 0.4 0.5 0.5 P6 0.6 0.5 0.5 0.6 0.4 1 1 1 1 1 0.6 0.5 0.5 0.6 0.4 P7 0.2 0.4 0.4 0.2 0.3 0 1 1 0 0 0.0 0.4 0.4 0.0 0.0 P8 0.2 0.2 0.3 0.4 0.2 0 0 0 1 0 0.0 0.0 0.0 0.4 0.0 P9 0.5 0.2 0.4 0.3 0.4 1 0 1 0 1 0.5 0.0 0.4 0.0 0.4 P10 0.4 0.4 0.5 0.3 0.4 1 1 1 0 1 0.4 0.4 0.5 0.0 0.4 Ahora se calcula \\(IPM^l\\) , \\(H^l\\) y \\(A^l\\), esto es: IPM_l &lt;- colMeans(datos[,11:15]) Nz_l &lt;- colSums(datos[,6:10]) H_l &lt;- Nz_l/N A_l &lt;- colSums(datos[,11:15])/Nz_l tab_l &lt;- data.frame(IPM_l, Nz_l, H_l, A_l, HA_l = H_l*A_l) rownames(tab_l) &lt;- paste0(&quot;l = &quot;, 1:nrow(tab_l)) tba(tab_l) IPM_l Nz_l H_l A_l HA_l l = 1 0.19 4 0.4 0.4750 0.19 l = 2 0.26 6 0.6 0.4333 0.26 l = 3 0.26 6 0.6 0.4333 0.26 l = 4 0.24 5 0.5 0.4800 0.24 l = 5 0.30 7 0.7 0.4286 0.30 Por último se realiza el calculo de las estimaciones puntuales y su varianza para \\(H\\), \\(A\\) y \\(IPM\\), esto es: estimacion &lt;- data.frame(H = mean(H_l), H_sd = sd(H_l), A = mean(A_l), A_sd = sd(A_l), IPM = mean(IPM_l), IPM_sd = sd(IPM_l)) Tabla 3.6: Estimaciones H H_sd A A_sd IPM IPM_sd 0.56 0.114 0.45 0.0252 0.25 0.04 "],["aplicación-índice-de-pobreza-multidimensional-en-colombia..html", "Capítulo 4 Aplicación: Índice de Pobreza Multidimensional en Colombia.", " Capítulo 4 Aplicación: Índice de Pobreza Multidimensional en Colombia. Nos centramos en la incidencia de la pobreza multidimensional descrito previamente. En este caso, requerimos \\(K = 9\\) indicadores que se miden como privaciones: \\(y_{di}^{k} = 1\\) si la persona tiene la privación y \\(y_{di}^{k} = 0\\) si la persona no ha tenido la privación. El índice requiere información para cada individuo \\(i = 1, \\ldots, N_d\\) en los dominios \\(d = 1, \\ldots, D\\), donde \\(N_d\\) denota el tamaño de la población del dominio \\(d\\). La función indicadora \\(I(\\cdot)\\) es igual a 1 cuando se cumple la condición \\(q_{di} \\ge z\\). Para este estudio, utilizamos el valor de 0.4 para \\(z\\), es decir, \\(I(\\cdot)\\) es igual a 1 cuando \\(q_{di} \\ge 0.4\\). \\(q_{di}\\) es una cantidad ponderada que considera los \\(K = 9\\) indicadores que conforman el índice. El valor de \\(q_{di}\\) el dominio \\(d\\) se calcula como: \\[ q_{di} = \\frac{1}{16}(y_{di}^{1} + y_{di}^{2} + y_{di}^{3} + y_{di}^{4}) + \\frac{1}{12}(y_{di}^{5} + y_{di}^{6} + y_{di}^{7}) + \\frac{1}{4}(y_{di}^{8} + y_{di}^{9}) \\] Donde: \\(y_{di}^{1}\\) = Privación en material de construcción de la vivienda \\(y_{di}^{2}\\) = Hacinamiento en el hogar. \\(y_{di}^{3}\\) = Acceso al servicio de Internet. \\(y_{di}^{4}\\) = Acceso al servicio energía eléctrica. \\(y_{di}^{5}\\) = Privación en saneamiento. \\(y_{di}^{6}\\) = Privación de acceso al agua potable. \\(y_{di}^{7}\\) = Privación en salud. \\(y_{di}^{8}\\) = Privación de la educación. \\(y_{di}^{9}\\) = Privación del empleo y la protección social. Las privaciones anteriores se agrupan por dimensiones como se muestran en la siguiente imagen Los datos de la encuesta y el censo han sido preparados previamente, la información sobre la cual realizaremos la predicción corresponde a Colombia en el 2019 encuesta_ipm &lt;- readRDS(&quot;Modelo_bayes_HxA/COL/Data/encuesta_nbi.rds&quot;) statelevel_predictors_df &lt;- readRDS(&quot;Modelo_bayes_HxA/COL/Data/statelevel_predictors_df_dam2.rds&quot;) byAgrega &lt;- c(&quot;dam&quot;, &quot;dam2&quot;, &quot;area&quot;, &quot;sexo&quot;, &quot;etnia&quot;, &quot;anoest&quot;, &quot;edad&quot;) Agregando la información para los municipios de Colombia para los indicadores que conformarán el IPM names_ipm &lt;- grep(pattern = &quot;nbi&quot;, names(encuesta_ipm),value = TRUE) encuesta_df &lt;- map(setNames(names_ipm,names_ipm), function(y){ encuesta_ipm$temp &lt;- as.numeric(encuesta_ipm[[y]]) encuesta_ipm %&gt;% group_by_at(all_of(byAgrega)) %&gt;% summarise(n = n(), yno = sum(temp), ysi = n - yno, .groups = &quot;drop&quot;) %&gt;% inner_join(statelevel_predictors_df, by = c(&quot;dam&quot;,&quot;dam2&quot;)) }) La base resultante quedan de la siguiente forma: Tabla 4.1: Privaci’on en material de construcci’on de la vivienda dam dam2 area sexo etnia anoest edad n yno ysi area1 sexo2 edad2 edad3 edad4 edad5 etnia2 anoest2 anoest3 anoest4 etnia1 tiene_acueducto piso_tierra alfabeta hacinamiento tasa_desocupacion luces_nocturnas cubrimiento_cultivo cubrimiento_urbano modificacion_humana accesibilidad_hospitales accesibilidad_hosp_caminado 11 11001 1 1 3 3 2 2439 53 2386 0.9979 0.5219 0.2690 0.2316 0.2251 0.0886 0.0093 0.2098 0.3810 0.2938 0.0027 0.0219 0.0026 0.0143 0.0848 0.0176 22.0069 9.1869 19.7751 0.5697 61.3823 259.2423 47 47001 1 2 3 3 2 2386 80 2306 0.9150 0.5158 0.2705 0.2125 0.1913 0.0719 0.0354 0.2539 0.4149 0.1837 0.0169 0.3002 0.0312 0.0364 0.2845 0.0015 4.3364 0.4577 1.7512 0.3278 210.3355 611.8750 23 23001 1 2 3 3 2 2359 226 2133 0.8192 0.5149 0.2631 0.2146 0.1961 0.0761 0.0170 0.2857 0.3634 0.1920 0.0072 0.1251 0.1412 0.0657 0.2275 0.0010 3.8284 19.0431 1.0209 0.4172 48.4391 234.8668 47 47001 1 1 3 3 2 2333 51 2282 0.9150 0.5158 0.2705 0.2125 0.1913 0.0719 0.0354 0.2539 0.4149 0.1837 0.0169 0.3002 0.0312 0.0364 0.2845 0.0015 4.3364 0.4577 1.7512 0.3278 210.3355 611.8750 11 11001 1 2 3 3 2 2246 50 2196 0.9979 0.5219 0.2690 0.2316 0.2251 0.0886 0.0093 0.2098 0.3810 0.2938 0.0027 0.0219 0.0026 0.0143 0.0848 0.0176 22.0069 9.1869 19.7751 0.5697 61.3823 259.2423 23 23001 1 1 3 3 2 2100 194 1906 0.8192 0.5149 0.2631 0.2146 0.1961 0.0761 0.0170 0.2857 0.3634 0.1920 0.0072 0.1251 0.1412 0.0657 0.2275 0.0010 3.8284 19.0431 1.0209 0.4172 48.4391 234.8668 Tabla 4.2: Hacinamiento dam dam2 area sexo etnia anoest edad n yno ysi area1 sexo2 edad2 edad3 edad4 edad5 etnia2 anoest2 anoest3 anoest4 etnia1 tiene_acueducto piso_tierra alfabeta hacinamiento tasa_desocupacion luces_nocturnas cubrimiento_cultivo cubrimiento_urbano modificacion_humana accesibilidad_hospitales accesibilidad_hosp_caminado 11 11001 1 1 3 3 2 2439 689 1750 0.9979 0.5219 0.2690 0.2316 0.2251 0.0886 0.0093 0.2098 0.3810 0.2938 0.0027 0.0219 0.0026 0.0143 0.0848 0.0176 22.0069 9.1869 19.7751 0.5697 61.3823 259.2423 47 47001 1 2 3 3 2 2386 1047 1339 0.9150 0.5158 0.2705 0.2125 0.1913 0.0719 0.0354 0.2539 0.4149 0.1837 0.0169 0.3002 0.0312 0.0364 0.2845 0.0015 4.3364 0.4577 1.7512 0.3278 210.3355 611.8750 23 23001 1 2 3 3 2 2359 1012 1347 0.8192 0.5149 0.2631 0.2146 0.1961 0.0761 0.0170 0.2857 0.3634 0.1920 0.0072 0.1251 0.1412 0.0657 0.2275 0.0010 3.8284 19.0431 1.0209 0.4172 48.4391 234.8668 47 47001 1 1 3 3 2 2333 1047 1286 0.9150 0.5158 0.2705 0.2125 0.1913 0.0719 0.0354 0.2539 0.4149 0.1837 0.0169 0.3002 0.0312 0.0364 0.2845 0.0015 4.3364 0.4577 1.7512 0.3278 210.3355 611.8750 11 11001 1 2 3 3 2 2246 667 1579 0.9979 0.5219 0.2690 0.2316 0.2251 0.0886 0.0093 0.2098 0.3810 0.2938 0.0027 0.0219 0.0026 0.0143 0.0848 0.0176 22.0069 9.1869 19.7751 0.5697 61.3823 259.2423 23 23001 1 1 3 3 2 2100 896 1204 0.8192 0.5149 0.2631 0.2146 0.1961 0.0761 0.0170 0.2857 0.3634 0.1920 0.0072 0.1251 0.1412 0.0657 0.2275 0.0010 3.8284 19.0431 1.0209 0.4172 48.4391 234.8668 "],["definiendo-de-los-modelos-en-stan..html", "4.1 Definiendo de los modelos en Stan.", " 4.1 Definiendo de los modelos en Stan. Para cada dimensión que compone el IPM se ajusta un modelo mixtos logit Bernoulli estimando mediante técnicas bayesiana. En este código se incluye el uso de la función future_map que permite procesar en paralelo cada modelo O puede compilar cada por separado, en nuestro caso se proceso cada modelo por separado. library(furrr) names_cov &lt;- statelevel_predictors_df %&gt;% dplyr::select(-dam,-dam2) %&gt;% names() names_cov &lt;- c(&quot;sexo&quot;,&quot;area&quot;,names_cov[16:19]) efec_aleat &lt;- paste0(&quot;(1|&quot;, c(&quot;dam&quot;, &quot;etnia&quot;), &quot;)&quot;, collapse = &quot;+&quot;) formula_mod &lt;- formula(paste( &quot; cbind(yno, ysi) ~&quot;, efec_aleat, &quot;+&quot;, paste0(names_cov, collapse = &quot; + &quot;) )) formula_mod Ejecutando los modelos plan(multisession, workers = 4) fit &lt;- future_map(encuesta_df, function(xdat){ stan_glmer(formula = formula_mod , family = binomial(link = &quot;logit&quot;), data = xdat, cores = 4, chains = 4, iter = 500 )}, .progress = TRUE) saveRDS(object = fit, &quot;Data/fits_IPM.rds&quot;) Terminado la compilación de los modelos después de realizar validaciones sobre esto, pasamos hacer las predicciones en el censo. "],["proceso-para-la-predicción-pi_dikl.html", "4.2 Proceso para la predicción \\(\\pi_{di}^{kl}\\)", " 4.2 Proceso para la predicción \\(\\pi_{di}^{kl}\\) Los modelos fueron compilados de manera separada, por tanto, disponemos de un objeto .rds por cada dimensión del IPM fit_agua &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_agua.rds&quot;) fit_educacion &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_educacion.rds&quot;) fit_empleo &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_empleo.rds&quot;) fit_energia &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_energia.rds&quot;) fit_hacinamiento &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_hacina.rds&quot;) fit_tic &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_tic.rds&quot;) fit_material &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_matviv.rds&quot;) fit_saneamiento &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_saneamiento.rds&quot;) fit_salud &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_salud.rds&quot;) Ahora, debemos leer la información del censo y crear los post-estrato censo_ipm &lt;- readRDS(&quot;Modelo_bayes_HxA/COL/Data/censo_COL.rds&quot;) %&gt;% rename(dam = depto, dam2 = mpio) %&gt;% group_by(dam, dam2, area, sexo, edad, etnia, anoest) %&gt;% summarise(n = sum(n), .groups = &quot;drop&quot;) statelevel_predictors_df &lt;- readRDS(&quot;Modelo_bayes_HxA/COL/Data/statelevel_predictors_df_dam2.rds&quot;) Para realizar la predicción en el censo debemos incluir la información auxiliar poststrat_df &lt;- left_join(censo_ipm, statelevel_predictors_df, by = c(&quot;dam&quot;, &quot;dam2&quot;)) Para cada uno de los modelos anteriores debe tener las \\(L\\) predicciones de \\(\\pi_{di}^{kl}\\), Privación de acceso al agua potable. temp &lt;- poststrat_df epred_mat_agua &lt;- posterior_epred( fit_agua, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) Privación de la educación. epred_mat_educacion &lt;- posterior_epred( fit_educacion, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) Privación del empleo y la protección social. epred_mat_empleo &lt;- posterior_epred( fit_empleo, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) Acceso al servicio energía eléctrica. epred_mat_energia &lt;- posterior_epred( fit_energia, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) Hacinamiento en el hogar. epred_mat_hacinamiento &lt;- posterior_epred( fit_hacinamiento, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) Acceso al servicio de Internet. epred_mat_internet &lt;- posterior_epred( fit_internet, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) Privación en material de construcción de la vivienda epred_mat_material &lt;- posterior_epred( fit_material, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) Privación en saneamiento. epred_mat_saneamiento &lt;- posterior_epred( fit_saneamiento, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) Privación en Salud. epred_mat_saneamiento &lt;- posterior_epred( fit_salud, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) "],["definiendo-los-hard-estimates.html", "4.3 Definiendo los hard estimates", " 4.3 Definiendo los hard estimates Los resultados anteriores se deben procesarse para obtener los hard estimates, es decir, términos de carencia (1) y no carencia (0) para la \\(k-esima\\) dimensión . Privación de acceso al agua potable. epred_mat_agua_dummy &lt;- rbinom(n = nrow(epred_mat_agua) * ncol(epred_mat_agua) , 1, epred_mat_agua) epred_mat_agua_dummy &lt;- matrix( epred_mat_agua_dummy, nrow = nrow(epred_mat_agua), ncol = ncol(epred_mat_agua) ) Privación de la educación. epred_mat_educacion_dummy &lt;- rbinom(n = nrow(epred_mat_educacion) * ncol(epred_mat_educacion) , 1, epred_mat_educacion) epred_mat_educacion_dummy &lt;- matrix( epred_mat_educacion_dummy, nrow = nrow(epred_mat_educacion), ncol = ncol(epred_mat_educacion) ) Acceso al servicio energía eléctrica epred_mat_energia_dummy &lt;- rbinom(n = nrow(epred_mat_energia) * ncol(epred_mat_energia) , 1, epred_mat_energia) epred_mat_energia_dummy &lt;- matrix( epred_mat_energia_dummy, nrow = nrow(epred_mat_energia), ncol = ncol(epred_mat_energia) ) Hacinamiento en el hogar. epred_mat_hacinamiento_dummy &lt;- rbinom( n = nrow(epred_mat_hacinamiento) * ncol(epred_mat_hacinamiento) , 1, epred_mat_hacinamiento ) epred_mat_hacinamiento_dummy &lt;- matrix( epred_mat_hacinamiento_dummy, nrow = nrow(epred_mat_hacinamiento), ncol = ncol(epred_mat_hacinamiento) ) Acceso al servicio de Internet. epred_mat_internet_dummy &lt;- rbinom(n = nrow(epred_mat_internet) * ncol(epred_mat_internet) , 1, epred_mat_internet) epred_mat_internet_dummy &lt;- matrix( epred_mat_internet_dummy, nrow = nrow(epred_mat_internet), ncol = ncol(epred_mat_internet) ) Privación en material de construcción de la vivienda epred_mat_material_dummy &lt;- rbinom(n = nrow(epred_mat_material) * ncol(epred_mat_material) , 1, epred_mat_material) epred_mat_material_dummy &lt;- matrix( epred_mat_material_dummy, nrow = nrow(epred_mat_material), ncol = ncol(epred_mat_material) ) Privación en saneamiento. epred_mat_saneamiento_dummy &lt;- rbinom(n = nrow(epred_mat_saneamiento) * ncol(epred_mat_saneamiento) , 1, epred_mat_saneamiento) epred_mat_saneamiento_dummy &lt;- matrix( epred_mat_saneamiento_dummy, nrow = nrow(epred_mat_saneamiento), ncol = ncol(epred_mat_saneamiento) ) Privación del empleo y la protección social. epred_mat_empleo_dummy &lt;- rbinom(n = nrow(epred_mat_empleo) * ncol(epred_mat_empleo) , 1, epred_mat_empleo) epred_mat_empleo_dummy &lt;- matrix( epred_mat_empleo_dummy, nrow = nrow(epred_mat_empleo), ncol = ncol(epred_mat_empleo) ) Privación en Salud. epred_mat_salud_dummy &lt;- rbinom(n = nrow(epred_mat_salud) * ncol(epred_mat_salud) , 1, epred_mat_salud) epred_mat_salud_dummy &lt;- matrix( epred_mat_salud_dummy, nrow = nrow(epred_mat_salud), ncol = ncol(epred_mat_salud) ) "],["calculando-q_dil-ileft-q_dil-ge-z-right-y-c_dilleftzright.html", "4.4 Calculando \\(q_{di}^{l}\\), \\(I\\left( q_{di}^{l} \\ge z \\right)\\) y \\(c_{di}^{l}\\left(z\\right)\\)", " 4.4 Calculando \\(q_{di}^{l}\\), \\(I\\left( q_{di}^{l} \\ge z \\right)\\) y \\(c_{di}^{l}\\left(z\\right)\\) Dado que los hard estimates fueron organizados en matrices, el calculo de \\(q^{l}_{id}\\) es una simple operación matricial la cual se muestra a continuación chain_q &lt;- # Vivienda y servicios (1 / 16) * ( epred_mat_material_dummy + epred_mat_hacinamiento_dummy + epred_mat_energia_dummy + epred_mat_tic_dummy ) + # Salud (1 / 12) * (epred_mat_agua_dummy + epred_mat_saneamiento_dummy + epred_mat_salud_dummy) + # Educación (1 / 4) * epred_mat_educacion_dummy + # Empleo (1 / 4) * epred_mat_empleo_dummy Ahora, es posible tener el calculo de \\(I\\left( q_{di}^{l} \\ge z \\right)\\), tomando como umbral \\(z=0.4\\). chain_Ind &lt;- chain_q chain_Ind[chain_Ind &lt; 0.4] &lt;- 0 chain_Ind[chain_Ind != 0] &lt;- 1 seguidamente calculamos \\(c_{di}^{l}\\left(z\\right)\\) chain_ci &lt;- matrix(0,nrow = nrow(chain_q), ncol = ncol(chain_q)) chain_ci[chain_Ind == 1] &lt;- chain_q[chain_Ind == 1] datos&lt;-data.frame(t(chain_q[1:5,1:10]), t(chain_Ind[1:5,1:10]), t(chain_ci[1:5,1:10]), N = censo_ipm$n[1:10] ) colnames(datos) &lt;- c(paste0(&quot;q&quot;,1:5), paste0(&quot;Ind&quot;,1:5),paste0(&quot;c&quot;,1:5),&quot;N&quot;) tba(datos, &quot;Cadenas obtenidas&quot;) Tabla 4.3: Cadenas obtenidas q1 q2 q3 q4 q5 Ind1 Ind2 Ind3 Ind4 Ind5 c1 c2 c3 c4 c5 N 0.1875 0.6458 0.6250 0.1250 0.7083 0 1 1 0 1 0.0000 0.6458 0.6250 0.0000 0.7083 1 0.7083 0.3958 0.3125 0.7708 0.6250 1 0 0 1 1 0.7083 0.0000 0.0000 0.7708 0.6250 1 0.7708 0.5208 0.5625 0.6875 0.6250 1 1 1 1 1 0.7708 0.5208 0.5625 0.6875 0.6250 9 0.6250 0.4583 0.4583 0.3958 0.6250 1 1 1 0 1 0.6250 0.4583 0.4583 0.0000 0.6250 1 0.5625 0.3750 0.3750 0.3958 0.3125 1 0 0 0 0 0.5625 0.0000 0.0000 0.0000 0.0000 5 0.3125 0.6250 0.5625 0.5625 0.0625 0 1 1 1 0 0.0000 0.6250 0.5625 0.5625 0.0000 22 0.2500 0.3750 0.3958 0.3958 0.6458 0 0 0 0 1 0.0000 0.0000 0.0000 0.0000 0.6458 9 0.6250 0.2083 0.7083 0.3125 0.7083 1 0 1 0 1 0.6250 0.0000 0.7083 0.0000 0.7083 76 0.3958 0.7083 0.5625 0.5625 0.5625 0 1 1 1 1 0.0000 0.7083 0.5625 0.5625 0.5625 796 0.7083 0.6250 0.4583 0.5625 0.6250 1 1 1 1 1 0.7083 0.6250 0.4583 0.5625 0.6250 3549 "],["estimación-de-h-a-e-ipm.html", "4.5 Estimación de \\(H\\), \\(A\\) e \\(IPM\\)", " 4.5 Estimación de \\(H\\), \\(A\\) e \\(IPM\\) Para este proceso debemos realizar sumas ponderadas, dado que cada registro de la base de datos representa un grupo de observaciones con las mismas características. numIPM &lt;- t(chain_ci) %&gt;% as.data.frame() %&gt;% mutate_all(~ . * censo_ipm$n) %&gt;% as.matrix() chain_N &lt;- t(chain_Ind) %&gt;% as.data.frame() %&gt;% mutate_all(~ . * censo_ipm$n) %&gt;% as.matrix() IPM_l &lt;- colSums(numIPM)/sum(censo_ipm$n) Nz_l &lt;- colSums(chain_N) H_l &lt;- Nz_l/sum(censo_ipm$n) A_l &lt;- colSums(numIPM)/Nz_l Tabla 4.4: l-iteraciones IPM_l Nz_l H_l A_l HA_l l = 1 0.1840 10321871 0.3020 0.6093 0.1840 l = 2 0.1803 10149096 0.2969 0.6074 0.1803 l = 3 0.1932 10960239 0.3207 0.6025 0.1932 l = 4 0.2134 12250636 0.3584 0.5954 0.2134 l = 5 0.1777 9989464 0.2923 0.6079 0.1777 l = 6 0.2187 12381895 0.3622 0.6037 0.2187 l = 7 0.1895 10616144 0.3106 0.6102 0.1895 l = 8 0.1945 11189155 0.3274 0.5941 0.1945 l = 9 0.2068 11684389 0.3418 0.6049 0.2068 l = 10 0.1909 10840874 0.3172 0.6020 0.1909 Por último se realiza las estimaciones puntuales y varianza para \\(H\\), \\(A\\) y \\(IPM\\), esto es: estimacion &lt;- data.frame(H = mean(H_l), H_sd = sd(H_l), A = mean(A_l), A_sd = sd(A_l), IPM = mean(IPM_l), IPM_sd = sd(IPM_l)) Tabla 4.5: Estimaciones Nacionales H H_sd A A_sd IPM IPM_sd 0.318 0.0147 0.6046 0.0039 0.1922 0.0082 "],["estimaciones-desagregadas-del-ipm.html", "4.6 Estimaciones desagregadas del IPM", " 4.6 Estimaciones desagregadas del IPM Para realizar las estimaciones desagregadas se desarrollo una función que facilita el calculo, la estructura general el proceso es repetir el proceso anterior por subgrupos, por ejemplo, departamento (dam) source(&quot;Modelo_bayes_HxA/0funciones/Estimar_ipm.R&quot;) ipm_dam &lt;- estime_IPM( poststrat = censo_ipm, chain_ci = chain_ci, chain_ind = chain_ind, byMap = &quot;dam&quot; ) %&gt;% data.frame() Tabla 4.6: Estimaciones por departamento dam H H_sd A A_sd IPM IPM_sd 05 0.2746 0.0316 0.5945 0.0079 0.1631 0.0175 08 0.2225 0.0478 0.5763 0.0149 0.1281 0.0270 11 0.1182 0.0745 0.5510 0.0386 0.0650 0.0411 13 0.3630 0.0340 0.6090 0.0089 0.2209 0.0192 15 0.3966 0.0182 0.6019 0.0039 0.2387 0.0103 17 0.2915 0.0328 0.5921 0.0090 0.1725 0.0182 18 0.4597 0.0463 0.6066 0.0090 0.2787 0.0269 19 0.5735 0.0192 0.6382 0.0054 0.3660 0.0114 20 0.3637 0.0376 0.5980 0.0086 0.2174 0.0213 23 0.5332 0.0258 0.6341 0.0068 0.3380 0.0149 25 0.3015 0.0222 0.5980 0.0059 0.1802 0.0123 27 0.7231 0.0320 0.6541 0.0088 0.4728 0.0186 41 0.3937 0.0298 0.5964 0.0068 0.2347 0.0169 44 0.5963 0.0208 0.6708 0.0121 0.3999 0.0143 47 0.3823 0.0381 0.6027 0.0091 0.2303 0.0218 50 0.3457 0.0445 0.5962 0.0094 0.2059 0.0249 52 0.5283 0.0235 0.6267 0.0055 0.3310 0.0138 54 0.4260 0.0519 0.6021 0.0105 0.2563 0.0297 63 0.2612 0.0489 0.5753 0.0115 0.1501 0.0273 66 0.3059 0.0425 0.5881 0.0098 0.1797 0.0237 68 0.3345 0.0275 0.6036 0.0066 0.2018 0.0154 70 0.5240 0.0281 0.6313 0.0066 0.3307 0.0162 73 0.3575 0.0357 0.6040 0.0086 0.2158 0.0201 76 0.2645 0.0341 0.5848 0.0089 0.1546 0.0190 81 0.4945 0.0659 0.6170 0.0159 0.3054 0.0440 85 0.4412 0.0665 0.6088 0.0133 0.2688 0.0425 86 0.5667 0.0551 0.6334 0.0151 0.3595 0.0407 88 0.3488 0.0694 0.5951 0.0194 0.2077 0.0430 91 0.6427 0.0683 0.6691 0.0211 0.4302 0.0489 94 0.7041 0.0604 0.6738 0.0226 0.4747 0.0472 95 0.5507 0.0701 0.6293 0.0190 0.3468 0.0471 97 0.7882 0.0493 0.6932 0.0289 0.5468 0.0465 99 0.7288 0.0477 0.6823 0.0283 0.4979 0.0454 Otra estimación desagregada que es posible obtener es la combinación por departamento y sexo, para ellos se usa la sintaxis. ipm_dam_sexo &lt;- estime_IPM( poststrat = censo_ipm, chain_ci = chain_ci, chain_ind = chain_ind, byMap = c(&quot;dam&quot;, &quot;sexo&quot;) ) %&gt;% data.frame() Tabla 4.7: Estimaciones por departamento y sexo dam sexo H H_sd A A_sd IPM IPM_sd 05 1 0.2801 0.0413 0.6001 0.0104 0.1678 0.0228 05 2 0.2697 0.0457 0.5903 0.0107 0.1589 0.0252 08 1 0.2224 0.0676 0.5784 0.0207 0.1283 0.0382 08 2 0.2226 0.0665 0.5757 0.0198 0.1279 0.0377 11 1 0.1143 0.1066 0.5533 0.0480 0.0628 0.0588 11 2 0.1217 0.1043 0.5517 0.0445 0.0669 0.0575 13 1 0.3765 0.0472 0.6141 0.0116 0.2309 0.0269 13 2 0.3501 0.0516 0.6046 0.0123 0.2113 0.0291 15 1 0.4112 0.0239 0.6051 0.0056 0.2487 0.0137 15 2 0.3828 0.0263 0.5988 0.0056 0.2292 0.0148 17 1 0.3040 0.0434 0.5955 0.0120 0.1808 0.0242 17 2 0.2800 0.0473 0.5896 0.0126 0.1648 0.0262 18 1 0.4815 0.0627 0.6124 0.0126 0.2945 0.0364 18 2 0.4376 0.0699 0.6010 0.0129 0.2627 0.0402 19 1 0.5898 0.0269 0.6415 0.0076 0.3782 0.0160 19 2 0.5579 0.0274 0.6351 0.0075 0.3542 0.0160 20 1 0.3790 0.0529 0.6014 0.0118 0.2277 0.0300 20 2 0.3491 0.0557 0.5953 0.0119 0.2075 0.0317 23 1 0.5489 0.0341 0.6388 0.0098 0.3505 0.0198 23 2 0.5180 0.0379 0.6295 0.0095 0.3259 0.0221 25 1 0.3104 0.0307 0.6023 0.0081 0.1868 0.0171 25 2 0.2929 0.0328 0.5941 0.0078 0.1739 0.0182 27 1 0.7294 0.0403 0.6615 0.0116 0.4823 0.0242 27 2 0.7171 0.0490 0.6473 0.0130 0.4638 0.0283 41 1 0.4081 0.0393 0.5997 0.0095 0.2446 0.0225 41 2 0.3796 0.0455 0.5934 0.0096 0.2251 0.0258 44 1 0.5997 0.0301 0.6743 0.0169 0.4042 0.0202 44 2 0.5931 0.0302 0.6677 0.0169 0.3959 0.0207 47 1 0.3961 0.0527 0.6069 0.0127 0.2401 0.0300 47 2 0.3688 0.0515 0.5990 0.0130 0.2207 0.0296 50 1 0.3621 0.0599 0.6013 0.0124 0.2173 0.0337 50 2 0.3290 0.0642 0.5916 0.0131 0.1942 0.0360 52 1 0.5400 0.0317 0.6303 0.0076 0.3403 0.0186 52 2 0.5174 0.0340 0.6233 0.0080 0.3224 0.0199 54 1 0.4384 0.0716 0.6070 0.0142 0.2657 0.0412 54 2 0.4143 0.0751 0.5983 0.0139 0.2475 0.0429 63 1 0.2647 0.0662 0.5797 0.0153 0.1531 0.0371 63 2 0.2581 0.0718 0.5726 0.0155 0.1474 0.0399 66 1 0.3136 0.0625 0.5935 0.0140 0.1857 0.0352 66 2 0.2991 0.0599 0.5842 0.0135 0.1744 0.0335 68 1 0.3499 0.0372 0.6087 0.0091 0.2128 0.0209 68 2 0.3201 0.0392 0.5989 0.0093 0.1915 0.0217 70 1 0.5399 0.0391 0.6358 0.0089 0.3431 0.0226 70 2 0.5081 0.0431 0.6269 0.0095 0.3184 0.0249 73 1 0.3712 0.0486 0.6090 0.0117 0.2258 0.0274 73 2 0.3442 0.0524 0.5998 0.0119 0.2061 0.0294 76 1 0.2689 0.0483 0.5894 0.0121 0.1582 0.0271 76 2 0.2607 0.0501 0.5818 0.0124 0.1514 0.0277 81 1 0.5108 0.0733 0.6214 0.0203 0.3177 0.0486 81 2 0.4779 0.0814 0.6127 0.0191 0.2930 0.0518 85 1 0.4568 0.0796 0.6133 0.0167 0.2803 0.0503 85 2 0.4254 0.0796 0.6045 0.0158 0.2572 0.0487 86 1 0.5805 0.0596 0.6375 0.0176 0.3705 0.0436 86 2 0.5528 0.0607 0.6293 0.0158 0.3483 0.0427 88 1 0.3473 0.0854 0.5978 0.0269 0.2077 0.0522 88 2 0.3500 0.0861 0.5936 0.0253 0.2078 0.0520 91 1 0.6501 0.0846 0.6728 0.0256 0.4372 0.0577 91 2 0.6344 0.0877 0.6661 0.0255 0.4224 0.0586 94 1 0.7090 0.0729 0.6780 0.0281 0.4809 0.0553 94 2 0.6985 0.0782 0.6697 0.0271 0.4677 0.0556 95 1 0.5763 0.0865 0.6350 0.0238 0.3661 0.0574 95 2 0.5200 0.0933 0.6229 0.0238 0.3236 0.0578 97 1 0.7905 0.0583 0.6973 0.0363 0.5516 0.0531 97 2 0.7853 0.0677 0.6885 0.0336 0.5411 0.0576 99 1 0.7347 0.0573 0.6840 0.0351 0.5031 0.0526 99 2 0.7218 0.0567 0.6804 0.0364 0.4916 0.0511 "],["estimaciones-por-dimension-del-ipm.html", "4.7 Estimaciones por dimension del IPM", " 4.7 Estimaciones por dimension del IPM Dado que el Índice de Pobreza Multidimensional (IPM) está compuesto por diversas dimensiones, resulta fundamental analizar cada una de estas dimensiones de manera individual. Esto permite comprender la naturaleza compleja y multifacética de la pobreza, lo cual a su vez posibilita diseñar estrategias de reducción efectivas. Esta aproximación garantiza una toma de decisiones fundamentada, la distribución eficiente de recursos y un impacto más profundo en la mejora de las condiciones de vida de las personas vulnerables. En este contexto, los “hard estimates” previamente obtenidos para cada dimensión resultan esenciales para obtener las estimaciones correspondientes a cada una de ellas. El proceso de cálculo se basa en una media ponderada y se aplica a la dimensión de Hacinamiento, siguiendo una lógica similar para las demás dimensiones del IPM. n_filtered &lt;- censo_ipm$n epred_mat_filtered &lt;- epred_mat_hacinamiento_dummy mrp_estimates &lt;- epred_mat_filtered %*% n_filtered / sum(n_filtered) datos &lt;- data.frame( estimate = mean(mrp_estimates), estimate_se = sd(mrp_estimates) ) Tabla 4.8: Estimaciones nacional para Hacinamiento estimate estimate_se 0.2372 0.0178 Con el objetivo de agilizar el proceso de calculo se define crea la función agregado_dim_ipm que hace los cálculos. La forma de uso es la siguiente. source(&quot;Modelo_bayes_HxA/0funciones/agregado_dim_ipm.r&quot;) datos_dam_haci &lt;- agregado_dim_ipm(poststrat = censo_ipm, epredmat = epred_mat_hacinamiento_dummy, byMap = &quot;dam&quot;) Tabla 4.9: Estimaciones por departamento para Hacinamiento dam estimate estimate_se 05 0.1872 0.0375 08 0.4005 0.0599 11 0.1924 0.0902 13 0.3326 0.0418 15 0.1816 0.0183 17 0.1556 0.0341 18 0.1667 0.0368 19 0.2594 0.0213 20 0.3593 0.0409 23 0.3890 0.0286 25 0.2148 0.0258 27 0.2308 0.0264 41 0.1854 0.0285 44 0.4464 0.0328 47 0.3689 0.0434 50 0.1781 0.0430 52 0.3224 0.0249 54 0.2879 0.0508 63 0.1471 0.0420 66 0.1645 0.0394 68 0.1949 0.0294 70 0.3893 0.0315 73 0.1921 0.0341 76 0.1558 0.0356 81 0.2488 0.1000 85 0.2417 0.1004 86 0.2713 0.0971 88 0.2522 0.1035 91 0.3226 0.1152 94 0.3462 0.1179 95 0.2584 0.1054 97 0.3714 0.1283 99 0.3313 0.1198 El resultado por municipio y para todas las dimensiones se muestra en la siguiente tabla Tabla 4.10: Estimacion puntual por municipio y dimension dam2 Agua Educacion Empleo Energia Hacinamienot Internet Material Salud Saneamiento 05001 0.0012 0.2518 0.4725 0.0025 0.1924 0.4783 0.0083 0.0537 0.0524 05002 0.1645 0.6267 0.7798 0.2160 0.2009 0.8866 0.1695 0.0423 0.2852 05004 0.2000 0.6593 0.7985 0.2673 0.2007 0.9089 0.1951 0.0429 0.3250 05021 0.1319 0.5715 0.7442 0.1656 0.1905 0.8532 0.1430 0.0390 0.2461 05030 0.0925 0.5443 0.7119 0.1046 0.1921 0.8295 0.1116 0.0484 0.2237 05031 0.1352 0.5731 0.7481 0.1722 0.1892 0.8542 0.1433 0.0433 0.2481 05034 0.1391 0.5837 0.7512 0.1703 0.1933 0.8599 0.1429 0.0417 0.2568 05036 0.1227 0.5818 0.7383 0.1272 0.1946 0.8660 0.1299 0.0445 0.2465 05038 0.2084 0.6816 0.8165 0.2823 0.2022 0.9242 0.2013 0.0423 0.3307 05040 0.1636 0.6089 0.7721 0.2093 0.1954 0.8784 0.1688 0.0391 0.2794 Tabla 4.11: Error de estimacion por municipio y dimension dam2 Agua_se Educacion_se Empleo_se Energia_se Hacinamienot_se Internet_se Material_se Salud_se Saneamiento_se 05001 0.0082 0.0981 0.1089 0.0081 0.0871 0.1138 0.0195 0.0516 0.0493 05002 0.0753 0.0820 0.0718 0.0775 0.0778 0.0470 0.0766 0.0397 0.0837 05004 0.0772 0.0883 0.0697 0.0857 0.0779 0.0428 0.0752 0.0407 0.0925 05021 0.0572 0.0877 0.0777 0.0608 0.0709 0.0622 0.0628 0.0356 0.0758 05030 0.0491 0.0798 0.0777 0.0529 0.0703 0.0604 0.0542 0.0368 0.0717 05031 0.0562 0.0827 0.0764 0.0564 0.0697 0.0614 0.0580 0.0360 0.0739 05034 0.0570 0.0796 0.0710 0.0609 0.0668 0.0549 0.0596 0.0341 0.0715 05036 0.0625 0.0825 0.0719 0.0616 0.0712 0.0508 0.0622 0.0374 0.0745 05038 0.0936 0.0931 0.0797 0.0969 0.0861 0.0397 0.0903 0.0414 0.1049 05040 0.0652 0.0836 0.0750 0.0686 0.0700 0.0531 0.0637 0.0349 0.0807 "],["mapa-del-ipm-por-municipio-de-colombia.html", "Capítulo 5 Mapa del IPM por municipio de Colombia", " Capítulo 5 Mapa del IPM por municipio de Colombia Dado que los municipios son otro nivel de desagregción, es posible realizar un mapa municipal para \\(H\\), \\(A\\) e \\(IPM\\). Para realizar el proceso, previamente se guardaron las estimaciones necesarias en un archivo .rds el cual usaremos a continuación: library(sf) library(tmap) estimado_ipm &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/estimado_ipm_HA.rds&quot;) temp_estimate_mpio &lt;- readRDS(&quot;Modelo_bayes_HxA/COL/data/temp_estimate_mpio.rds&quot;) brks_H &lt;- round(quantile(estimado_ipm$dam2$H, probs = c(0, 0.2, 0.4, 0.6, 0.8, 1)), 2) brks_ipm &lt;- round(quantile(estimado_ipm$dam2$IPM, probs = c(0, 0.2, 0.4, 0.6, 0.8, 1)), 2) brks_A &lt;- round(quantile(estimado_ipm$dam2$A, probs = c(0, 0.2, 0.4, 0.6, 0.8, 1)), 2) maps3 &lt;- tm_shape(ShapeSAE %&gt;% left_join(estimado_ipm, by = &quot;dam2&quot;)) Para crear los mapas se usa la siguiente sintaxis thema_map &lt;- tm_layout(legend.only = FALSE, legend.height = -0.5, legend.width = -0.4, asp = 1.5, legend.text.size = 5, legend.title.size = 4) Mapa_H &lt;- maps3 + tm_polygons( &quot;H&quot;, breaks = brks_H, title = &quot;H&quot;, palette = &quot;YlOrRd&quot;, colorNA = &quot;white&quot; ) + thema_map Mapa_A &lt;- maps3 + tm_polygons( &quot;A&quot;, breaks = brks_A, title = &quot;A&quot;, palette = &quot;YlOrRd&quot;, colorNA = &quot;white&quot; ) + thema_map Mapa_ipm &lt;- maps3 + tm_polygons( &quot;IPM&quot;, breaks = brks_ipm, title = &quot;IPM&quot;, palette = &quot;YlOrRd&quot;, colorNA = &quot;white&quot; ) + thema_map Mapas &lt;- tmap_arrange(Mapa_H, Mapa_A, Mapa_ipm) tmap_save( Mapas, &quot;Modelo_bayes_HxA/COL/Output/COL_IPM.jpeg&quot;, width = 6920, height = 4080, asp = 0 ) "],["mapa-municipal-por-dimensión-del-ipm.html", "5.1 Mapa municipal por dimensión del IPM", " 5.1 Mapa municipal por dimensión del IPM temp_estimate_mpio &lt;- readRDS(&quot;Modelo_bayes_HxA/COL/data/temp_estimate_mpio.rds&quot;) brks_dim &lt;- round(quantile( temp_estimate_mpio$estimate, probs = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1) ), 2) maps2 &lt;- tm_shape(ShapeSAE %&gt;% inner_join(temp_estimate_mpio, by = &quot;dam2&quot;)) Mapa_ing2 &lt;- maps2 + tm_polygons( &quot;estimate&quot;, breaks = brks_dim, title = &quot;&quot;, palette = &quot;YlOrRd&quot;, colorNA = &quot;white&quot; ) + thema_map + tm_facets(by = &quot;Indicador&quot;, ncol = 4) tmap_save( Mapa_ing2, &quot;Modelo_bayes_HxA/COL/Output/COL_dims_ipm.jpeg&quot;, width = 6920, height = 4080, asp = 0 ) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
